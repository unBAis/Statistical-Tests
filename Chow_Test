import pandas as pd
import numpy as np


#gets the chow test where inputs are defined as follows:
#y1 =  pre-event dependent variable data frame
#x1 =  pre-event independent variable/s data frame
#y2 =  post-event dependent variable data frame
#x2 =  post-event independent variable/s data frame

def chow_f(y1, x1, y2, x2):

    def find_rss (y, x):
        A = np.vstack([x.T, np.ones(len(x))]).T
        rss = np.linalg.lstsq(A, y, rcond=None)[1][0]
        length = len(y)
        return (rss, length)


    rss_total, n_total = find_rss(np.append(y1, y2), pd.concat([x1, x2]))
    rss_1, n_1 = find_rss(y1, x1)
    rss_2, n_2 = find_rss(y2, x2)

    df1 = len(x1.columns)+1
    df2 = (n_1 + n_2) - 2*df1
    chow_nom = (rss_total - (rss_1 + rss_2)) / df1
    chow_denom = (rss_1 + rss_2) / df2
    return chow_nom / chow_denom


def chow_p(y1, x1, y2, x2, **kwargs):
    F = chow_f(y1, x1, y2, x2, **kwargs)
    if not F:
        return 1
    df1 = len(x1.columns)+1
    df2 = (len(x1) + len(x2)) - 2*(df1)
    p_val = f.sf(F, df1, df2)
    return p_val
